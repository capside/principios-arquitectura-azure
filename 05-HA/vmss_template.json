{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmType": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": { "description": "Number of VM instances (100 or less)." },
      "defaultValue": 2,
      "maxValue": 100
    },
    "vmUsername": {
      "type": "string",
      "metadata": { "description": "User to be created on all VMs." }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue" : "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6ozx8RMiWlkSZtKHfKsEtN+kX7nHfgnyZpbOmmkrIMgqVnpVl/o5uzSHCTutLhBZxSnB1G6ZtcEQWkmtdkKBXT+YY6aYf+dGkSnj1DPMud5Q58byDfZ4uV7BXxWxPnV9rMfAiA2LY7C2RInnV3WVwkOxJhnM0jDEzLoxP/3mHSbl0LNYacurfWZ7mmg4t/kwuTBdNKPzSOr8aw9HCjr1oB87U7yoM7GD1BCZYhN8DWPIjbDjsP9RJMYy3+0lHJcs/f9YxEqIV6pYESyEWo67AWCmZUNhAj7opsCt7VRei9csGa2GwbX5TMwF4tyvv9RGFuARYh/slf8qKfg+mMNg1 mario.arienza@capside.com",
      "metadata": { "description": "This field must be a valid SSH public key." }
    },
    "CustomScriptLocation":{
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/cowbotic/app2/master/appfun.sh",
      "metadata": {
        "description": "Base URL of the solution template gallery package"
      }
    }
  },
  "variables": {
    "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "vnetName": "vnet",
    "subnetName": "subnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "publicIPAddressName": "pip",
    "loadBalancerName": "MiLB",
    "loadBalancerFrontEndName": "MiLBFrontend",
    "loadBalancerBackEndName": "MiLBBackend",
    "loadBalancerProbeName": "MiLBProbe",
    "loadBalancerNatPoolName": "MiLBNatPool"
  },
  "resources": [
    { "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
      ],
      "sku": {
        "name": "[parameters('vmType')]",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "upgradePolicy": { "mode": "Manual" },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": { "createOption": "FromImage" },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04.0-LTS",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('vmUsername')]",
            "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[concat('/home/',parameters('vmUsername'),'/.ssh/authorized_keys')]",
                                        "keyData": "[parameters('sshPublicKey')]"
                                    }
                                ]
                            }
                        }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": { "id": "[variables('subnetRef')]"},
                        "loadBalancerBackendAddressPools": [{ "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('loadBalancerBackEndName'))]"}],
                        "loadBalancerInboundNatPools": [{ "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('loadBalancerNatPoolName'))]"}]}
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "customScript",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": ["[parameters('CustomScriptLocation')]"],
                    "commandToExecute": "bash appfun.sh"
                  }
                }
              }
            ]
          }
        }
      }
    },
    { "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.1.0.0/24"
            }
          }
        ]
      }
    },
    { "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('vmssName'))]"
        }
      }
    },
    { "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerBackendName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "roundRobinLBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/', variables('loadBalancerProbeName'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('loadBalancerProbeName')]",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('loadBalancerNatPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": "50000",
              "frontendPortRangeEnd": "50100",
              "backendPort": "22"
            }
          }
        ]
      }
    }
  ]
}
